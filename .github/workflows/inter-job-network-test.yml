name: Inter-Job Network Test

on:
  workflow_dispatch:

jobs:
  job1:
    runs-on: ubuntu-latest
    steps:
      - name: Start server on port 8000
        run: |
          python3 -c "
          from http.server import HTTPServer, SimpleHTTPRequestHandler
          import time
          import threading

          class Handler(SimpleHTTPRequestHandler):
              def do_GET(self):
                  self.send_response(200)
                  self.send_header('Content-type', 'text/plain')
                  self.end_headers()
                  self.wfile.write(b'success')

          def run_server():
              httpd = HTTPServer(('', 8000), Handler)
              httpd.timeout = 1  # Set a short timeout for handle_request()
              print('Server started on port 8000')
              timeout = time.time() + 60
              while time.time() < timeout:
                  httpd.handle_request()
              print('Server stopped after 60 seconds')

          server_thread = threading.Thread(target=run_server)
          server_thread.start()
          server_thread.join(timeout=61)  # Wait for a maximum of 61 seconds

          print('Script completed')
          "

  job2:
    runs-on: ubuntu-latest
    steps:
      - name: Check server connection
        run: |
          python3 -c "
          import urllib.request
          import time

          start_time = time.time()
          while time.time() - start_time < 60:
              try:
                  with urllib.request.urlopen('http://localhost:8000') as response:
                      print(f'Response received: {response.read().decode()}')
                      break
              except Exception as e:
                  print(f'Connection failed: {e}')
                  time.sleep(1)
          else:
              print('Failed to connect after 60 seconds')
          "
